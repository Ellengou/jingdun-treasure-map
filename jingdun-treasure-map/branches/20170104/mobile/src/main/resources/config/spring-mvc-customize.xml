<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.2.xsd
           http://www.springframework.org/schema/mvc
           http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
       default-lazy-init="false">

    <mvc:annotation-driven/>

    <!--<mvc:annotation-driven>-->
    <!--<mvc:message-converters register-defaults="true">-->
    <!--<ref bean="stringHttpMessageConverter"/>-->
    <!--<ref bean="fastJsonHttpMessageConverter"/>-->
    <!--<ref bean="byteHttpMessageConverter"/>-->
    <!--</mvc:message-converters>-->
    <!--</mvc:annotation-driven>-->

    <!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
    <!--<bean id="byteHttpMessageConverter"-->
    <!--class="org.springframework.http.converter.ByteArrayHttpMessageConverter">-->
    <!--</bean>-->
    <!--<bean id="fastJsonHttpMessageConverter"-->
    <!--class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">-->
    <!--<property name="supportedMediaTypes">-->
    <!--<list>-->
    <!--<value>application/json</value>-->
    <!--<value>application/json;charset=UTF-8</value>-->
    <!--<value>text/html;charset=UTF-8</value>-->
    <!--<value>application/x-www-form-urlencoded;charset=UTF-8</value>-->
    <!--<value>application/x-www-form-urlencoded</value>-->
    <!--<value>application/octet-stream</value>-->
    <!--<value>application/octet-stream;charset=UTF-8</value>-->
    <!--</list>-->
    <!--</property>-->
    <!--<property name="features">-->
    <!--<list>-->
    <!--<value>QuoteFieldNames</value>-->
    <!--<value>WriteDateUseDateFormat</value>-->
    <!--</list>-->
    <!--</property>-->
    <!--</bean>-->

    <!-- 使用annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入 -->
    <context:component-scan base-package="com.jd.controller"/>
    <!--&lt;!&ndash;&lt;!&ndash;自定义拦截,目前只做logger记录,可扩展&ndash;&gt;&ndash;&gt;-->
    <!--<mvc:interceptors>-->
    <!--<mvc:interceptor>-->
    <!--<mvc:mapping path="/error"/>-->
    <!--<bean class="com.jd.webkits.interceptors.XInterceptor">-->
    <!--<property name="XInterceptorList">-->
    <!--<list>-->
    <!--<bean class="com.jd.webkits.interceptors.RequestInterceptor"/>-->
    <!--</list>-->
    <!--</property>-->
    <!--</bean>-->
    <!--</mvc:interceptor>-->
    <!--</mvc:interceptors>-->

    <!--<bean class="com.jd.webkits.resolver.XExceptionResolver">-->
    <!--&lt;!&ndash; 定义默认的异常处理页面，当该异常类型的注册时使用 &ndash;&gt;-->
    <!--<property name="defaultErrorView" value="error"/>-->
    <!--&lt;!&ndash; 定义需要特殊处理的异常，用类名或完全路径名作为key，异常也页名作为值 &ndash;&gt;-->
    <!--<property name="defaultPath" value="error/error"/>-->
    <!--<property name="exceptionMappings">-->
    <!--<props>-->
    <!--<prop key="com.jd.webkits.resolver.XExceptionResolver">/error/error</prop>-->
    <!--<prop key="java.lang.Exception">/error/error</prop>-->
    <!--</props>-->
    <!--</property>-->
    <!--<property name="order" value="1"/>-->
    <!--</bean>-->

    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>     <!-- 支持JSTL -->
        <property name="prefix" value="/WEB-INF/views/"/>     <!-- 模板的路径 -->
        <property name="suffix" value=".jsp"/>                <!-- 模板文件的后缀-->
    </bean>

</beans>